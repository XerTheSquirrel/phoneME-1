#
#   
#
# Copyright  1990-2006 Sun Microsystems, Inc. All Rights Reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License version
# 2 only, as published by the Free Software Foundation. 
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License version 2 for more details (a copy is
# included at /legal/license.txt). 
# 
# You should have received a copy of the GNU General Public License
# version 2 along with this work; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA 
# 
# Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
# Clara, CA 95054 or visit www.sun.com if you need additional
# information or have any questions. 
######################################################################
#
# Module's Component Configuration file
#
######################################################################

# Append JSR 172 source bundle creation to target
source_bundle:: jsr_172_source_bundle

# Jpp files that need preprocessing
#
$(JSR_172_GENERATED_DIR)/classes/%.java: $(INTERNAL_JSR_172_RI_DIR)/jaxrpc/%.jpp
	@$(call runjpp,$^,$@)

# Copy and filter JSR 172 source in JSR_172_SOURCE_OUTPUT_DIR
jsr_172_source_bundle:: $(JSR_172_DIR)
	@echo " ... JSR 172 source bundle" $(LOG)
	$(AT)$(call source_bundle_filter,$(JSR_172_DIR),$(JSR_172_SOURCE_OUTPUT_DIR), src)
	$(AT)mkdir -p $(JSR_172_SOURCE_OUTPUT_DIR)/build
	$(AT)cp -f $(JSR_172_DIR)/build/subsystem_rules.gmk $(JSR_172_SOURCE_OUTPUT_DIR)/build/subsystem_rules.gmk
	$(AT)cp -f $(JSR_172_DIR)/build/subsystem_defs.gmk $(JSR_172_SOURCE_OUTPUT_DIR)/build/subsystem_defs.gmk

$(OUTPUT_DIR)/jsr172__stub-generator.jar : $(JAVAC_OUT_DIR) # $(INTERNAL_JSR_172_SG_RI_FILES) $(INTERNAL_JSR_172_SG_RI_DEPENDENCIES)
	@echo "build $@ ..."
	$(JAVAC_CMD) -g$(JAVAC_DEBUG) -d $(JAVAC_OUT_DIR) \
		-classpath "$(INTERNAL_JSR_172_SG_RI_DEPENDENCIES_CPLIST)" \
		$(INTERNAL_JSR_172_SG_RI_FILES) || exit 1;
	$(JAR_CMD) cf $@ $(JAVAC_OUT_DIR)/$(subst .,/,$(INTERNAL_JSR_172_SG_RI_PACKAGE))/*.class

$(OUTPUT_DIR)/jsr172.jar : $(CONFIGURATOR_JAR_FILE) xmlparser.compiled \
		$(INTERNAL_JSR_172_REQUIRED_MIDP_FILES) $(INTERNAL_JSR_172_JAVA_FILES_JAXRPC_RI_FILES) $(INTERNAL_JSR_172_JAVA_FILES_RMI_RI_FILES)
	@echo "build $@ ..."
	$(call generateConstantClasses, $(JSR_172_GENERATED_DIR), $(JSR_172_CONSTANT_FILE))
	$(JAVAC_CMD) -g$(JAVAC_DEBUG) -d $(JAVAC_OUT_DIR) \
		-classpath "$(INTERNAL_JSR_172_DEPENDENCIES_CPLIST)$(JAVAC_OUT_DIR)" \
		$(INTERNAL_JSR_172_REQUIRED_MIDP_FILES) $(INTERNAL_JSR_172_JAVA_FILES_JAXRPC_RI_FILES) $(INTERNAL_JSR_172_JAVA_FILES_RMI_RI_FILES) \
		$(foreach class, $(shell cat $(call constantClassesListFile, $(JSR_172_GENERATED_DIR))), \
			$(JSR_172_GENERATED_DIR)/classes/$(subst .,/,$(class)).java) \
		|| exit 1;

INTERNAL_JSR_172_DEPENDENCIES_CPLIST = $(subst ; ,;,$(foreach jar,$(INTERNAL_JSR_172_DEPENDENCIES),$(jar);))
INTERNAL_JSR_172_SG_RI_DEPENDENCIES_CPLIST = $(subst ; ,;,$(foreach jar,$(INTERNAL_JSR_172_SG_RI_DEPENDENCIES),$(jar);))

jsr172__stub-generator : $(OUTPUT_DIR)/jsr172__stub-generator.jar
jsr172-jar : $(OUTPUT_DIR)/jsr172.jar

ifneq ($(TARGET_VM), cldc_vm)
include $(JSR_172_DIR)/build/cdc_share/subsystem_rules.gmk
endif

# runJarFile(jarFile,options)
define runJarFile
	$(JAVA_CMD) -jar `$(call POSIX2HOST_CMD,$(1))` $(2)
endef

# Generate constant classes
# generateConstantClasses(generatedDirectory, constantsXmlFile)
define generateConstantClasses
    $(foreach class, $(shell \
        $(call runJarFile, $(CONFIGURATOR_JAR_FILE), \
            -xml $(2) \
            -xsl $(CONFIGURATOR_DIR)/xsl/cdc/constantClasses.xsl \
            -out $(call constantClassesListFile, $(1));) \
        cat $(call constantClassesListFile, $(1))), \
	    $(call runJarFile, $(CONFIGURATOR_JAR_FILE), \
            -xml $(2) \
            -xsl $(CONFIGURATOR_DIR)/xsl/cdc/constantsJava.xsl \
            -params fullClassName $(class) \
            -out $(1)/classes/$(subst .,/,$(class)).java;))
endef

# Returns the name of a file which contains a list of classes generated from an XML constant file
# constantClassesListFile(generatedDirectory)
define constantClassesListFile
    $(1)/.constant.class.list
endef
